#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        comma {
            bindings = <&kp COMMA>;
            key-positions = <15 16>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <24 25>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <2 3>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <9 10>;
        };

        question_mark {
            bindings = <&kp LS(MINUS)>;
            key-positions = <30 31>;
        };

        exclamation_point {
            bindings = <&kp LS(NUMBER_1)>;
            key-positions = <38 39>;
        };

        left_brace {
            bindings = <&kp LA(LS(N8))>;
            key-positions = <4 3>;
        };

        right_brace {
            bindings = <&kp LS(LA(N9))>;
            key-positions = <8 9>;
        };

        left_parenthesis {
            bindings = <&kp LS(N8)>;
            key-positions = <17 16>;
        };

        right_parenthesis {
            bindings = <&kp LS(N9)>;
            key-positions = <23 24>;
        };

        left_bracket {
            bindings = <&kp LA(N8)>;
            key-positions = <32 31>;
        };

        right_bracket {
            bindings = <&kp LA(N9)>;
            key-positions = <37 38>;
        };

        plus {
            bindings = <&kp MINUS>;
            key-positions = <8 23>;
        };

        minus {
            bindings = <&kp SLASH>;
            key-positions = <23 37>;
        };

        asterisk {
            bindings = <&kp LS(APOSTROPHE)>;
            key-positions = <9 24>;
        };

        forward_slash {
            bindings = <&kp LS(N7)>;
            key-positions = <24 38>;
        };

        ampersand {
            bindings = <&kp LS(NUMBER_6)>;
            key-positions = <10 25>;
        };

        pipe {
            bindings = <&kp LA(N7)>;
            key-positions = <25 39>;
        };

        caret {
            bindings = <&kp LS(LA(RIGHT_BRACKET))>;
            key-positions = <7 22>;
        };

        underscore {
            bindings = <&kp LS(SLASH)>;
            key-positions = <22 36>;
        };

        percent {
            bindings = <&kp LS(N5)>;
            key-positions = <5 18>;
        };

        tilde {
            bindings = <&kp LA(RIGHT_BRACKET)>;
            key-positions = <18 33>;
        };

        equals {
            bindings = <&kp LS(N0)>;
            key-positions = <17 32>;
        };

        euro {
            bindings = <&kp LS(N4)>;
            key-positions = <4 17>;
        };

        dollar {
            bindings = <&kp LA(N4)>;
            key-positions = <3 16>;
        };

        backslash {
            bindings = <&kp LS(LA(N7))>;
            key-positions = <16 31>;
        };

        at {
            bindings = <&kp LA(N2)>;
            key-positions = <2 15>;
        };

        hash {
            bindings = <&kp LS(N3)>;
            key-positions = <15 30>;
        };

        less_than {
            bindings = <&kp BACKSLASH>;
            key-positions = <14 15>;
        };

        greater_than {
            bindings = <&kp LS(BACKSLASH)>;
            key-positions = <25 26>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_base_layer {
            display-name = "QWERTY";
            bindings = <
&mo 5           &kp LEFT_BRACKET  &kp W        &kp F       &kp P            &kp B                           &kp UP               &kp J        &kp L         &kp U       &kp Y        &kp APOSTROPHE  &mo 4
&kp ESCAPE      &mt LSHIFT A      &mt LCTRL R  &mt LALT S  &mt LGUI T       &kp G                 &kp LEFT  &none     &kp RIGHT  &kp M        &mt RGUI N    &mt RALT E  &mt RCTRL I  &mt RSHIFT O    &to 0
&sk LEFT_SHIFT  &kp SEMICOLON     &kp X        &kp C       &kp D            &kp V        &none              &kp DOWN             &kp K        &kp H         &kp Z       &kp Q        &kp APOSTROPHE  &sk RIGHT_SHIFT
                                               &sl 3       &lt 2 BACKSPACE  &lt 1 SPACE                                          &lt 1 ENTER  &lt 2 DELETE  &sl 3
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
            label = "MacOS";
        };

        mac_navigation_layer {
            bindings = <
&none       &none  &mkp RCLK       &kp UP_ARROW    &mkp LCLK        &none                            &mmv MOVE_UP                     &kp SCROLLLOCK   &none               &kp PAGE_UP              &none          &none                   &none
&kp ESCAPE  &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none            &mmv MOVE_LEFT  &none           &mmv MOVE_RIGHT  &kp PRINTSCREEN  &mt RIGHT_GUI HOME  &mt RIGHT_ALT PAGE_DOWN  &mt RCTRL END  &mt RIGHT_SHIFT INSERT  &tog 1
&none       &none  &none           &none           &none            &none   &none                    &mmv MOVE_DOWN                   &kp PAUSE_BREAK  &none               &none                    &none          &none                   &none
                                   &none           &none            &tog 1                                                            &kp ENTER        &none               &none
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
            label = "Navigation";
        };

        mac_numbers_layer {
            bindings = <
&none  &none           &none             &none         &none         &none                                    &none                         &none      &kp N7        &kp N8  &kp N9  &none   &none
&none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &none                    &kp C_PREVIOUS  &none             &kp C_NEXT  &none      &kp N4        &kp N5  &kp N6  &kp N0  &tog 2
&none  &none           &none             &none         &none         &none      &kp K_MUTE                    &kp C_PLAY_PAUSE              &none      &kp NUMBER_1  &kp N2  &kp N3  &none   &none
                                         &none         &none         &kp SPACE                                                              &kp ENTER  &tog 2        &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            label = "Numbers";
        };

        mac_functions_layer {
            bindings = <
&none  &kp F13             &kp F14               &kp F15           &kp F16           &none                  &none         &none  &kp F7            &kp F8            &kp F9                &kp F12              &none
&none  &mt LEFT_SHIFT F17  &mt LEFT_CONTROL F18  &mt LEFT_ALT F19  &mt LEFT_GUI F20  &none           &none  &none  &none  &none  &mt RIGHT_GUI F4  &mt RIGHT_ALT F5  &mt RIGHT_CONTROL F6  &mt RIGHT_SHIFT F11  &tog 3
&none  &kp F21             &kp F22               &kp F23           &kp F24           &none  &none           &none         &none  &kp F1            &kp F2            &kp F3                &kp F10              &none
                                                 &tog 3            &none             &none                                &none  &none             &tog 3
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
            label = "Functions";
        };

        backlight_layer {
            bindings = <
&none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF                  &none         &none  &none  &none  &none  &none  &none
&none  &none            &none            &none            &rgb_ug RGB_TOG  &none                     &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &none           &none         &none  &none  &none  &none  &none  &none
                                         &none            &none            &none                                          &none  &none  &none
            >;

            label = "Backlight";
        };

        bluetooth_layer {
            bindings = <
&none  &none  &none  &none  &none  &bt BT_CLR                      &none         &bt BT_NXT  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none       &out OUT_BLE   &out OUT_USB   &none          &none          &none
&none  &none  &none  &none  &none  &bt BT_CLR_ALL  &none           &none         &bt BT_PRV  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4
                     &none  &none  &none                                         &none       &none          &none
            >;

            label = "Bluetooth";
        };
    };
};
